Node and Pod

Pod Smalles unit of K8s
Abstraction over container
Usually 1 application per Pod
virtual network
each pod gets its own IP address
los contenedores pueden morir en cualquier momento
    Se crea de nuevo
        Tiene un nuevo IP
Service
    Permanent IP address
    The lifecycle of a service is not the same as pod
    External Service Ip and port
    Internal Service
    Ingress url

    Config Map
        External configuration of your application
    Secrets
        Used to store secret data
        base64 encoded

DataStorage
 Volume
    Fisical storage to the container    Local machine 
    outside the cluster

    Storage external plug storage
    K8s doesnt manage data persistance

Deployment and statful set
    Service load balancer
    Blue print ยก Deployment
    Your no interact with pods, you interact with deployments
    Scale up and scale down
    Pods layer of Abstraction on containers
    Deployment layer of abstraction on pods.
    Stateless

    Cannot replicated db via deployment
    statful set especially for database.
        Replicate the pods
        Scale up
        Scale down
        Synchronize the writting and reading.


Master
Slaves


Worker Nodes
    Container Runtime
    Kubelet
        Interact container runtime and node
    Kube proxy
        Avoid send request to another machine 

Communication services

Sechedule pod
Monitor
re-schedule/re-start pod
join a new node
Master Node
4 process
    Api server client comunicates, cluster gateway, update query, gatekeeper authentication
        1 entrypoint to the cluste
    Scheduler
        Decide where the next pod is going to be deployed
        Availabed resources
        shceduler communicate con kubelet node
    Controller manager
        Detects cluster state change
        Makes request to scheduler
    etc
        Key value store
        is the cluster brain
        save and store in etd
        cluster brain
        what resources are available?
        is cluster healty?
        did cluster state change?
        Application data in another place

        2 master node
         les resources
        3 worker node
         
         High availability
         Scalability

         etc remote storage etc snapshots

         volumes=remote storage application data from pods
aws
replaication is much easier.
self-healing of K8s
smart scheduling


Kubectl basic comands
    minikube


    kubectl
    kubectl get Nodes
    kubectl get podkubectl get services
    kubectl create -h
        no pod
        Deploymen - abstraction over pods.
    kubectl create deploymen nginx --image=nginex
    kubectl get deploymentkubectl get pod
    blueprin for creating pods
        name images
        rest default

        replicaset
        kubectl get replicaset
        no create update neighter delete replicaset

        Deploymen replicatset pod < container
        kubectl edit deployment  nginx-deployment
        kubectl get pod
        kubectl get pod
        kubectl get replicaset
        kubectl logs pod
        kubectl create deploymen mongo-depl --image=mongo
        kubectl get pod
        kubectl logs mongo...
        kubectl create deployment mongo-depl --immage=mongo
        kubectl describe pod name
        kubectl logs ...
        kubectl exec -it podname --bin/bash
        delete deployment 
        kubectl get pod, deployment, replicaset

        Configuration file.
        kubectl apply -f <filename>
        kubectl get nodes, pod, services, replicaset, deployment


        Configuration
        apiversion
        kind
        Metadata
        specification
            specific to the kind
        status
            automaticly generate and added for k8
            desired
            actual
            status come from etcd.

        YAM strict indentation.
        YAML validator.
        Stroe the config file with your code.
        Deployment manage pods.
            emplate configuration file to another configuration file

        Labels & selectors.
        Metadata Labels
        spec sleectors
        key pair.

    deployment of por labels.
    deployment >labels to pod
    service> labels to deployment

    Default service kubectl
    kubectl describe service <service name>
    kubectl get pod -o wide
    kubectl get deployment nginx-deployment -o YAML
    kubectl delete -f ...

    Mongodb
    Mongo express

    MongoDB pod
    Internal services No external request
    mongo express to connect to db
    config map db url
    secre db user, db pwd
    external service.

    default kubernetes service.

    secret Opaque.
    echo -n 'username' | base64

    kuebectl apply -f mongosecrets.yml
    valueFrom:
        secretKeyRef:
            name: name secret
            key: name key


    kubectl get pod  
    kubectl get pod --watch
    kubectl describe pod <podname> 

    multiple file 

    --- multiples config

    kubectl gete service
    kubectl describe service nameservice.
    kubectl get all | grep mongodb
    configMapKeyref
        name
        key

    External service
    spec
        type: LoadBalancer

        port
        targetport
        nodeport 300000-32567

        ClusterIp is default. Internal ip
        LoadBalancer internalip external ip

        minikube services nameoftheservice




        Namespaces
Organize resources.
4 namespacer per defaultkubectl get namespace

kube-dashboad minikube
kube-system no system proces
kubepulic config map
kube node lease. heartbeats of nodes
default
kubectl create namespace my*namespace.
should not use for smaller projects.
group your resources by namespaces.


Many resources
Many teams, same applications.
Resource sharing
     stagin and development
     blue/green deployment
access and resource limits on Namespaces.
 isolated environment
 limint cpu, ram, storage per NS2


 you cant acces most resources from another namespace.
  like secrets config maps

service cann access by another namespace.

components, which cant be created within a Namespace.

Persisten volume
Node

kubectl get configmap -n <namespace>
console         kubectl apply -f name --namespace=name
config file     in metadata put the namespace
Change active namespace
    kubens.


    Kubectl Ingress
    external service vs ingress.
    internal external service local 
    external ingress

    Ingress
    Ingress Controller
       implementation for ingress
       ingres controlle pod or set of pods evaluate the rules.
       evaluate all ther rulesmanages redirections
       entrypoint to cluster.
       K8s Nginx ingress controller.
       Load balancer > ingress controller.
    
    minikube addons enable ingress
    kubectl get pod -n kube-system.

    create ingress rule.

    Ingress default backend.

https://www.linkedin.com/pulse/part-2-kubernetes-services-minikube-docker-james-denman/
https://www.linkedin.com/pulse/gettings-started-kubernetes-minikube-docker-james-denman/
https://kubernetes.io/docs/setup/learning-environment/minikube/
https://www.hpe.com/us/en/insights/articles/how-to-learn-kubernetes-with-minikube-1812.html
https://minikube.sigs.k8s.io/docs/drivers/docker/
https://platform9.com/blog/stateful-applications-with-kubernetes/